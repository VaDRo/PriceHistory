// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PriceHistory.Data;

#nullable disable

namespace PriceHistory.Data.Migrations
{
    [DbContext(typeof(PriceHistoryContext))]
    [Migration("20240408100340_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PriceHistory.Model.Common.ConcreteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<int>("ProducerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProducerId");

                    b.ToTable("ConcreteModel");
                });

            modelBuilder.Entity("PriceHistory.Model.Common.Producer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("LogoName")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Producer");
                });

            modelBuilder.Entity("PriceHistory.Model.Common.ProductProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Property");
                });

            modelBuilder.Entity("PriceHistory.Model.Common.PropertyValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ConcreteModelId")
                        .HasColumnType("int");

                    b.Property<int>("ProductPropertyId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("ConcreteModelId");

                    b.HasIndex("ProductPropertyId");

                    b.ToTable("PropertyValue");
                });

            modelBuilder.Entity("PriceHistory.Model.Common.ConcreteModel", b =>
                {
                    b.HasOne("PriceHistory.Model.Common.Producer", "Producer")
                        .WithMany("Models")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("PriceHistory.Model.Common.PropertyValue", b =>
                {
                    b.HasOne("PriceHistory.Model.Common.ConcreteModel", "ConcreteModel")
                        .WithMany("PropertyValues")
                        .HasForeignKey("ConcreteModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PriceHistory.Model.Common.ProductProperty", "Property")
                        .WithMany("PropertyValues")
                        .HasForeignKey("ProductPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConcreteModel");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("PriceHistory.Model.Common.ConcreteModel", b =>
                {
                    b.Navigation("PropertyValues");
                });

            modelBuilder.Entity("PriceHistory.Model.Common.Producer", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("PriceHistory.Model.Common.ProductProperty", b =>
                {
                    b.Navigation("PropertyValues");
                });
#pragma warning restore 612, 618
        }
    }
}
